/**
 * Copyright (c) 2016 Enzien Audio, Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, and/or
 * sublicense copies of the Software, strictly on a non-commercial basis,
 * and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 * DO NOT MODIFY. THIS CODE IS MACHINE GENERATED BY THE ENZIEN AUDIO HEAVY COMPILER.
 */

#ifndef _HEAVYCONTEXT_SYNTHTEST2_H_
#define _HEAVYCONTEXT_SYNTHTEST2_H_

#include "HvBase.h"

#define Context(_x) ((Hv_SynthTest2 *) (_x))

// object includes
#include "SignalTabwrite.h"
#include "ControlSystem.h"
#include "SignalVar.h"
#include "ControlCast.h"
#include "SignalSample.h"
#include "HvTable.h"
#include "SignalEnvelope.h"
#include "ControlIf.h"
#include "SignalTabread.h"
#include "ControlBinop.h"
#include "ControlVar.h"
#include "ControlRandom.h"
#include "SignalDel1.h"
#include "ControlDelay.h"
#include "HvMath.h"
#include "SignalPhasor.h"
#include "ControlUnop.h"
#include "SignalSamphold.h"

typedef struct Hv_SynthTest2 {
  HvBase base;

  // objects
  SignalTabhead sTabhead_doIRc;
  SignalTabread sTabread_fpV6w;
  SignalTabread sTabread_3wyaX;
  SignalEnvelope sEnv_s7bY4;
  SignalSample sSample_AvCvp;
  SignalPhasor sPhasor_YEUi9;
  SignalDel1 sDel1_aqZsP;
  SignalSamphold sSamphold_muJf8;
  SignalTabhead sTabhead_Is7NT;
  SignalTabread sTabread_tWIk8;
  SignalTabread sTabread_4ceK8;
  SignalDel1 sDel1_rL8gP;
  SignalSamphold sSamphold_q1Nbj;
  SignalTabhead sTabhead_80SR0;
  SignalTabread sTabread_bGNc4;
  SignalTabread sTabread_GcFjQ;
  SignalTabwrite sTabwrite_JGG4s;
  SignalTabwrite sTabwrite_3Q7Hv;
  SignalPhasor sPhasor_ovvF6;
  SignalSample sSample_MLbfG;
  SignalPhasor sPhasor_IlhaM;
  ControlBinop cBinop_9Ewcv;
  ControlVar cVar_WsEre;
  ControlBinop cBinop_mRs3U;
  ControlBinop cBinop_t6m5j;
  ControlDelay cDelay_zNMJT;
  ControlBinop cBinop_LPwKk;
  ControlVar cVar_KBHxQ;
  ControlBinop cBinop_4td77;
  ControlBinop cBinop_Ifmh3;
  ControlBinop cBinop_nRYVY;
  SignalVarf sVarf_S6eRd;
  ControlVar cVar_lyTYh;
  SignalVarf sVarf_dkjNR;
  SignalVarf sVarf_MlZog;
  ControlVar cVar_4wHDG;
  ControlVar cVar_2p7ka;
  ControlVar cVar_Z4uuj;
  ControlBinop cBinop_M1Irq;
  ControlIf cIf_zRrco;
  ControlVar cVar_twF66;
  ControlIf cIf_BOhRH;
  ControlBinop cBinop_3lSD5;
  ControlVar cVar_EdIGD;
  ControlBinop cBinop_9u2d5;
  ControlDelay cDelay_m1Ym1;
  ControlDelay cDelay_R4nFB;
  HvTable hTable_vyKNn;
  ControlBinop cBinop_vY0nv;
  ControlVar cVar_AXLYk;
  ControlBinop cBinop_htWSp;
  ControlBinop cBinop_OKQeO;
  ControlVar cVar_q4r16;
  ControlBinop cBinop_hL7Ys;
  ControlVar cVar_uy3Gy;
  ControlDelay cDelay_RzVqf;
  ControlBinop cBinop_JVBBg;
  HvTable hTable_xmCal;
  ControlDelay cDelay_cstqU;
  ControlBinop cBinop_fOSwr;
  SignalVari sVari_eKbc2;
  ControlRandom cRandom_SHYml;
  ControlBinop cBinop_6YxKK;
  ControlBinop cBinop_mvNhj;
  SignalVarf sVarf_DTI7M;
  ControlVar cVar_eZXmb;
  ControlBinop cBinop_r6Lsv;
  ControlBinop cBinop_vUWHm;
  ControlBinop cBinop_jT3ES;
  ControlVar cVar_3FiE4;
  SignalVarf sVarf_ZP6wX;
  SignalVarf sVarf_Km8h8;
  ControlVar cVar_8G3Lr;
  ControlVar cVar_n8cea;
  ControlVar cVar_5akK8;
  ControlVar cVar_GvXJS;
  SignalVarf sVarf_WOTlu;
  SignalVarf sVarf_vu7ud;
  ControlVar cVar_gbAPz;
  SignalVarf sVarf_QtaNJ;
  ControlVar cVar_4Q5FZ;
  ControlBinop cBinop_rOLqd;
  ControlVar cVar_npZ9j;
  ControlBinop cBinop_8uxdy;
  ControlVar cVar_GxDbI;
  ControlVar cVar_I205j;
  ControlBinop cBinop_ahKMK;
  ControlDelay cDelay_UDLMy;
  ControlBinop cBinop_AR1TX;
  ControlVar cVar_7XFpp;
  ControlBinop cBinop_Zkj9O;
  ControlBinop cBinop_3IKrB;
  ControlVar cVar_X2XBC;
  SignalVarf sVarf_YAYce;
  ControlVar cVar_wnI6j;
  SignalVarf sVarf_AMGmd;
  ControlBinop cBinop_rCJWT;
  ControlBinop cBinop_UYb1p;
  SignalVarf sVarf_XKa0f;
  ControlBinop cBinop_CWVi9;
  SignalVarf sVarf_oCVD3;
  ControlBinop cBinop_gVVJ1;
  ControlBinop cBinop_Kw5MX;
  SignalVarf sVarf_KRwMf;
  ControlVar cVar_reXrp;
  SignalVarf sVarf_xABvP;
  SignalVarf sVarf_gGFUT;
  ControlVar cVar_CwMiQ;
  ControlVar cVar_MNrLL;
  ControlBinop cBinop_DPDmU;
  SignalVarf sVarf_ry7CS;
  ControlVar cVar_JdRHQ;
  SignalVarf sVarf_EhxvV;
  ControlVar cVar_EOjbQ;
  ControlVar cVar_fKj2r;
  ControlVar cVar_jRH83;
  ControlVar cVar_QPmnz;
  SignalVarf sVarf_wEdqT;
  SignalVarf sVarf_Ag72Y;
  ControlVar cVar_03gmg;
  ControlBinop cBinop_t6LXT;
  ControlBinop cBinop_xfSll;
} Hv_SynthTest2;

#endif // _HEAVYCONTEXT_SYNTHTEST2_H_
